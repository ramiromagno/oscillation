% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gene_statistics.R
\name{mean_variance_fit}
\alias{mean_variance_fit}
\title{Linear regression on gene variance and mean}
\usage{
mean_variance_fit(gene_stat_df)
}
\arguments{
\item{gene_stat_df}{A dataframe of at least three columns: \code{gene},
\code{mean}, and \code{variance}.}
}
\value{
A list of three dataframes:
\describe{
  \item{regression_coeficients}{Information about the regression coeficients. Each row is a regression coefficient.}
  \item{goodness_of_fit}{Information on the goodness of fit.}
  \item{residuals}{Information about each fitted point. The column
  \code{.resid} contains the difference between the fitted line and the data
  point, i.e., \eqn{\hat{y}-y}. Please note this is not the most customary
  definition of residual:
  \href{https://github.com/tidymodels/broom/issues/802}{broom issue 802}.
  But, given this definition, the high variance genes are indeed those that
  show a \strong{negative} residual.}
}
}
\description{
This function performs a linear regression on the log-transformed values of
the variance vs mean, i.e., \code{log(variance)~log(mean)}. Genes whose
(log(mean), log(variance)) points stay above the fitted line can be
considered high variance genes. These values will have a \strong{negative}
residual (\code{.resid} column in dataframe \code{residuals}).
}
\details{
To keep only the high variance genes, you can filter by residual:
\code{mean_variance_fit(foo)$residuals \%>\% dplyr::filter(.resid < 0)}.
}
